{
  "swagger": "2.0",
  "info": {
    "title": "CHNN-BNE-V-FileMigration",
    "description": "This service covers the functionality related to BancaNet Empresarial  Migration (priority 4)",
    "version": "1.0.0"
  },
  "host": "127.0.0.1",
  "schemes": [
    "https"
  ],
  "basePath": "/api",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/private/v1/channels/bne/migration/report": {
      "post": {
        "summary": "migrationReport",
        "description": "This API is to Submit a report to be generated. The Scope is Private, Entry-Point, and Post-Login",
        "tags": [
          "migrationReport"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Content-Types that are acceptable for the response",
            "type": "string",
            "required": true
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "List of acceptable human languages for response",
            "type": "string",
            "required": false
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "The Authorization Token received during login",
            "type": "string",
            "required": true
          },
          {
            "name": "client_id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Client ID generated during application registration"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Types that are sent in the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "128 bit UUID that you generate for every request",
            "type": "string",
            "required": true
          },
          {
            "name": "channelId",
            "in": "header",
            "description": "channel where request originated",
            "type": "string",
            "required": true
          },
          {
            "name": "sid",
            "in": "header",
            "description": "Session Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "migrationReportRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MigrationReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/MigrationReportResponse"
            }
          },
          "400": {
            "description": "<table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing or invalid Parameters</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "<table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization credentials are missing or invalid</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "<table><tr><td>Type</td><td>Code</td><td>Details</td><td>More Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The request operation is not configured to access this resource</td><td>Channel/Country/Business provided in the request is not supported currently</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "<table><tr><td>Type</td><td>Code</td><td>Details</td><td>More Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The requested resource was not found</td><td>Empty resource/resource not found</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "<table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The request failed due to an internal error/server unavailability</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/private/v1/channels/bne/migration/customers/file": {
      "post": {
        "summary": "customerMigrationByFile",
        "description": "This API is for Asynchronously add a bunch of customers from a text file. The Scope is Private, Entry-Point, and Post-Login",
        "tags": [
          "customerMigrationByFile"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Content-Types that are acceptable for the response",
            "type": "string",
            "required": true
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "List of acceptable human languages for response",
            "type": "string",
            "required": false
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "The Authorization Token received during login",
            "type": "string",
            "required": true
          },
          {
            "name": "client_id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Client ID generated during application registration"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Types that are sent in the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "128 bit UUID that you generate for every request",
            "type": "string",
            "required": true
          },
          {
            "name": "channelId",
            "in": "header",
            "description": "channel where request originated",
            "type": "string",
            "required": true
          },
          {
            "name": "sid",
            "in": "header",
            "description": "Session Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerMigrationByFileRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerMigrationByFileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/CustomerMigrationByFileResponse"
            }
          },
          "400": {
            "description": "<table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing or invalid Parameters</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "<table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization credentials are missing or invalid</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "<table><tr><td>Type</td><td>Code</td><td>Details</td><td>More Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The request operation is not configured to access this resource</td><td>Channel/Country/Business provided in the request is not supported currently</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "<table><tr><td>Type</td><td>Code</td><td>Details</td><td>More Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The requested resource was not found</td><td>Empty resource/resource not found</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "<table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The request failed due to an internal error/server unavailability</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "summary": "updateCustomersByFile",
        "description": "This API is for Asynchronously Update the data for migrated customers from a text file. The Scope is Private, Entry-Point, and Post-Login",
        "tags": [
          "updateCustomersByFile"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Content-Types that are acceptable for the response",
            "type": "string",
            "required": true
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "List of acceptable human languages for response",
            "type": "string",
            "required": false
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "The Authorization Token received during login",
            "type": "string",
            "required": true
          },
          {
            "name": "client_id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Client ID generated during application registration"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Types that are sent in the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "128 bit UUID that you generate for every request",
            "type": "string",
            "required": true
          },
          {
            "name": "channelId",
            "in": "header",
            "description": "channel where request originated",
            "type": "string",
            "required": true
          },
          {
            "name": "sid",
            "in": "header",
            "description": "Session Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateCustomersByFileRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCustomersByFileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/UpdateCustomersByFileResponse"
            }
          },
          "400": {
            "description": "<table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing or invalid Parameters</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "<table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization credentials are missing or invalid</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "<table><tr><td>Type</td><td>Code</td><td>Details</td><td>More Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The request operation is not configured to access this resource</td><td>Channel/Country/Business provided in the request is not supported currently</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "<table><tr><td>Type</td><td>Code</td><td>Details</td><td>More Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The requested resource was not found</td><td>Empty resource/resource not found</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "<table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The request failed due to an internal error/server unavailability</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/private/v1/channels/bne/migration/process/status": {
      "get": {
        "summary": "migrationProcessStatus",
        "description": "This API is to retrieve the status of last week submitted migration processes. The Scope is Private, Entry-Point, and Post-Login",
        "tags": [
          "migrationProcessStatus"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Content-Types that are acceptable for the response",
            "type": "string",
            "required": true
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "List of acceptable human languages for response",
            "type": "string",
            "required": false
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "The Authorization Token received during login",
            "type": "string",
            "required": true
          },
          {
            "name": "client_id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Client ID generated during application registration"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Types that are sent in the request",
            "required": false,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "128 bit UUID that you generate for every request",
            "type": "string",
            "required": true
          },
          {
            "name": "channelId",
            "in": "header",
            "description": "channel where request originated",
            "type": "string",
            "required": true
          },
          {
            "name": "sid",
            "in": "header",
            "description": "Session Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/MigrationProcessStatusResponse"
            }
          },
          "400": {
            "description": "<table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing or invalid Parameters</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "<table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization credentials are missing or invalid</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "<table><tr><td>Type</td><td>Code</td><td>Details</td><td>More Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The request operation is not configured to access this resource</td><td>Channel/Country/Business provided in the request is not supported currently</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "<table><tr><td>Type</td><td>Code</td><td>Details</td><td>More Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The requested resource was not found</td><td>Empty resource/resource not found</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "<table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The request failed due to an internal error/server unavailability</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/private/v1/channels/bne/migration/process/result": {
      "post": {
        "summary": "migrationProcessResult",
        "description": "This API Retrieves the result file for a migration process. The Scope is Private, Entry-Point, and Post-Login",
        "tags": [
          "migrationProcessResult"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "Content-Types that are acceptable for the response",
            "type": "string",
            "required": true
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "List of acceptable human languages for response",
            "type": "string",
            "required": false
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "The Authorization Token received during login",
            "type": "string",
            "required": true
          },
          {
            "name": "client_id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Client ID generated during application registration"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Types that are sent in the request",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "header",
            "description": "128 bit UUID that you generate for every request",
            "type": "string",
            "required": true
          },
          {
            "name": "channelId",
            "in": "header",
            "description": "channel where request originated",
            "type": "string",
            "required": true
          },
          {
            "name": "sid",
            "in": "header",
            "description": "Session Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "migrationProcessResultRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MigrationProcessResultRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/MigrationProcessResultResponse"
            }
          },
          "400": {
            "description": "<table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing or invalid Parameters</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "<table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization credentials are missing or invalid</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "<table><tr><td>Type</td><td>Code</td><td>Details</td><td>More Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The request operation is not configured to access this resource</td><td>Channel/Country/Business provided in the request is not supported currently</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "<table><tr><td>Type</td><td>Code</td><td>Details</td><td>More Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The requested resource was not found</td><td>Empty resource/resource not found</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "<table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The request failed due to an internal error/server unavailability</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "MigrationReportRequest": {
      "description": "Request object for migrationReport API",
      "properties": {
        "soeId": {
          "description": "SOEID of the employee who performed the operation",
          "type": "string",
          "example": "es85641",
          "pattern": "^[a-zA-Z]{2}[0-9]{5}$"
        },
        "corporateCustomerType": {
          "description": "identifies the customer segment, possible values are: SMALL_MEDIUM_ENTERPRISE, CORPORATE, ENTERPRISE",
          "type": "string",
          "example": "CORPORATE"
        },
        "migrationStatusFlag": {
          "description": "flag that identifies if the customer has been migrated",
          "type": "boolean",
          "example": true
        },
        "startDate": {
          "description": "initial date of the report",
          "type": "string",
          "format": "date-time",
          "example": "2017-01-19T16:39:57-06:00"
        },
        "endDate": {
          "description": "final date of the report",
          "type": "string",
          "format": "date-time",
          "example": "2017-01-19T16:39:57-06:00"
        }
      },
      "required": [
        "soeId",
        "startDate",
        "endDate"
      ]
    },
    "MigrationReportResponse": {
      "description": "Response object for migrationReport API",
      "properties": {
        "migrationProcessId": {
          "description": "The unique ID for the submitted migration process",
          "type": "integer",
          "example": 5210
        }
      },
      "required": [
        "migrationProcessId"
      ]
    },
    "CustomerMigrationByFileRequest": {
      "description": "Request object for customerMigrationByFile API",
      "properties": {
        "soeId": {
          "description": "SOEID of the employee who performed the operation",
          "type": "string",
          "example": "es85641",
 		  "pattern": "^[a-zA-Z]{2}[0-9]{5}$"
        },
        "customerMigrationData": {
          "description": "Base 64 representation of the file",
          "type": "string",
          "format": "base64"
        }
      },
      "required": [
        "soeId",
        "customerMigrationData"
      ]
    },
    "CustomerMigrationByFileResponse": {
      "description": "Response object for customerMigrationByFile API",
      "properties": {
        "migrationProcessId": {
          "description": "The unique ID for the submitted migration process",
          "type": "integer",
          "example": 5210
        }
      },
      "required": [
        "migrationProcessId"
      ]
    },
    "UpdateCustomersByFileRequest": {
      "description": "Request object for updateCustomersByFile API",
      "properties": {
        "soeId": {
          "description": "SOEID of the employee who performed the operation",
          "type": "string",
          "example": "es85641",
 		  "pattern": "^[a-zA-Z]{2}[0-9]{5}$"
        },
        "customerMigrationData": {
          "description": "Base 64 representation of the file",
          "type": "string",
          "format": "base64"
        }
      },
      "required": [
        "soeId",
        "customerMigrationData"
      ]
    },
    "UpdateCustomersByFileResponse": {
      "description": "Response object for updateCustomersByFile API",
      "properties": {
        "migrationProcessId": {
          "description": "The unique ID for the submitted migration process",
          "type": "integer",
          "example": 5210
        }
      },
      "required": [
        "migrationProcessId"
      ]
    },
    "MigrationProcessStatusResponse": {
      "description": "Response object for migrationProcessStatus API",
      "properties": {
        "migrationProcesses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MigrationProcess"
          }
        }
      }
    },
    "MigrationProcessResultRequest": {
      "description": "Request object for migrationProcessResult API",
      "properties": {
        "soeId": {
          "description": "SOEID of the employee who performed the operation",
          "type": "string",
          "example": "es85641",
 		  "pattern": "^[a-zA-Z]{2}[0-9]{5}$"
        },
        "migrationProcessId": {
          "description": "The unique ID for the submitted migration process",
          "type": "integer",
          "example": 5210
        }
      },
      "required": [
        "soeId",
        "migrationProcessId"
      ]
    },
    "MigrationProcessResultResponse": {
      "description": "Response object for migrationProcessResult API",
      "properties": {
        "customerMigrationDataReport": {
          "description": "Base 64 representation of the file",
          "type": "string",
          "format": "base64"
        }
      },
      "required": [
        "customerMigrationDataReport"
      ]
    },
    "MigrationProcess": {
      "description": "Migration process object",
      "properties": {
        "migrationProcessId": {
          "description": "The unique ID for the submitted migration process",
          "type": "integer",
          "example": 5210
        },
        "migrationProcessType": {
          "description": "The type of migration process",
          "type": "string",
          "enum": [
            "ADDITION",
            "MODIFICATION",
            "REPORT"
          ],
          "example": "ADDITION"
        },
        "migrationProcessStatus": {
          "description": "The status of the migration process",
          "type": "string",
          "enum": [
            "SUBMITTED",
            "IN_PROGRESS",
            "REJECTED",
            "FINISHED"
          ],
          "example": "FINISHED"
        }
      }
    },
    "ErrorResponse": {
      "properties": {
        "type": {
          "type": "string",
          "description": "Invalid - Request did not confirm to the specification and was unprocessed and rejected. Please fix the value and try again",
          "enum": [
            "error",
            "warn",
            "invalid",
            "fatal"
          ]
        },
        "code": {
          "description": "Error code which qualifies the error",
          "type": "string"
        },
        "details": {
          "description": "Human readable explanation specific to the occurrence of the problem",
          "type": "string"
        },
        "location": {
          "description": "The name of the field that resulted in the error",
          "type": "string"
        },
        "moreInfo": {
          "description": "URI to human readable documentation or detailed description of the error",
          "type": "string"
        }
      },
      "required": [
        "type",
        "code"
      ]
    }
  }
}
